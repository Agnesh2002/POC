// Generated by view binder compiler. Do not edit!
package com.example.poc.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.poc.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomWeatherCardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView cardTime0;

  @NonNull
  public final TextView customWeatherCardDescription;

  @NonNull
  public final TextView customWeatherCardFeelsLike;

  @NonNull
  public final TextView customWeatherCardMaxTemp;

  @NonNull
  public final TextView customWeatherCardTime;

  @NonNull
  public final ImageView customWeatherImage;

  private CustomWeatherCardBinding(@NonNull LinearLayout rootView, @NonNull CardView cardTime0,
      @NonNull TextView customWeatherCardDescription, @NonNull TextView customWeatherCardFeelsLike,
      @NonNull TextView customWeatherCardMaxTemp, @NonNull TextView customWeatherCardTime,
      @NonNull ImageView customWeatherImage) {
    this.rootView = rootView;
    this.cardTime0 = cardTime0;
    this.customWeatherCardDescription = customWeatherCardDescription;
    this.customWeatherCardFeelsLike = customWeatherCardFeelsLike;
    this.customWeatherCardMaxTemp = customWeatherCardMaxTemp;
    this.customWeatherCardTime = customWeatherCardTime;
    this.customWeatherImage = customWeatherImage;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomWeatherCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomWeatherCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_weather_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomWeatherCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_time0;
      CardView cardTime0 = ViewBindings.findChildViewById(rootView, id);
      if (cardTime0 == null) {
        break missingId;
      }

      id = R.id.custom_weather_card_description;
      TextView customWeatherCardDescription = ViewBindings.findChildViewById(rootView, id);
      if (customWeatherCardDescription == null) {
        break missingId;
      }

      id = R.id.custom_weather_card_feels_like;
      TextView customWeatherCardFeelsLike = ViewBindings.findChildViewById(rootView, id);
      if (customWeatherCardFeelsLike == null) {
        break missingId;
      }

      id = R.id.custom_weather_card_max_temp;
      TextView customWeatherCardMaxTemp = ViewBindings.findChildViewById(rootView, id);
      if (customWeatherCardMaxTemp == null) {
        break missingId;
      }

      id = R.id.custom_weather_card_time;
      TextView customWeatherCardTime = ViewBindings.findChildViewById(rootView, id);
      if (customWeatherCardTime == null) {
        break missingId;
      }

      id = R.id.custom_weather_image;
      ImageView customWeatherImage = ViewBindings.findChildViewById(rootView, id);
      if (customWeatherImage == null) {
        break missingId;
      }

      return new CustomWeatherCardBinding((LinearLayout) rootView, cardTime0,
          customWeatherCardDescription, customWeatherCardFeelsLike, customWeatherCardMaxTemp,
          customWeatherCardTime, customWeatherImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
